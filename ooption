#!/usr/bin/env python3

import sys
import os
import shlex
import subprocess


__doc__ = """Spawn a command line and save output to file.

Usage:
  {argv0} [-o OUTFILE] [-e ERRFILE] command-line...
  {argv0} --eo FILE command-line...

Options:
  -o OUTFILE   File to save stdout of the command line.
  -e ERRFILE   File to save stderr of the command line.
  --eo FILE    File to save both stdout and stderr.

Example:
  {argv0} -o result.txt ls
""".format(argv0=os.path.basename(__file__))


def main():
    outfile = errfile = eofile = None

    argv = sys.argv[:]
    i = 1
    while i < len(argv):
        a = argv[i]
        if a in ('-h', '--help'):
            print(__doc__)
            return
        if a.startswith('-o'):
            if outfile:
                sys.exit("Error: option -o specified twice.")
            if a != ('-o'):
                outfile = a[2:]
                i += 1
            else:
                outfile = argv[i + 1]
                i += 2
        elif a.startswith('-e'):
            if errfile:
                sys.exit("Error: option -e specified twice.")
            if a != ('-e'):
                errfile = a[2:]
                i += 1
            else:
                errfile = argv[i + 1]
                i += 2
        elif a.startswith('--eo='):
            if eofile:
                sys.exit("Error: option --eo specified twice.")
            eofile = a[len('--eo='):]
            i += 1
        elif a == '--eo':
            if eofile:
                sys.exit("Error: option --eo specified twice.")
            eofile = argv[i + 1]
            i += 2
        else:
            break  # while i

    if outfile == '-':
        outfile = None
    if errfile == '-':
        errfile = None
    if eofile == '-':
        sys.exit("Error: `-` can not be specified to option --eo.")

    if eofile:
        if outfile or errfile:
            sys.exit("Error: --eo is mutually exclusive to -o or -e.")
    else:
        if not (outfile or errfile):
            sys.exit("Error: neither -e, -o, --eo is specified.")
        if outfile == errfile:
            eofile = outfile
            outfile = errfile = None

    command_line = shlex.join(argv[i:]).split()

    if not command_line:
        sys.exit("Error: no command line is given")

    if eofile:
        r = subprocess.run(command_line, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        with open(eofile, 'wb') as outp:
            outp.write(r.stdout)
        sys.exit(r.returncode)
    else:
        outp = open(outfile, 'wb') if outfile else None
        errp = open(errfile, 'wb') if errfile else None
        r = subprocess.run(command_line, stdout=outp, stderr=errp)
        sys.exit(r.returncode)


if __name__ == '__main__':
    main()
